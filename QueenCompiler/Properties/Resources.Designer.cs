//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Queen.Language.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Queen.Language.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to &apos;{0}&apos; is prohibited..
        /// </summary>
        internal static string ICAccessProhibited {
            get {
                return ResourceManager.GetString("ICAccessProhibited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member function &apos;{0}&apos; of &apos;{1}&apos;: the member function to overide &apos;{2}&apos; of &apos;{3}&apos; has different parameters or return type..
        /// </summary>
        internal static string ICBadOverrideFunction {
            get {
                return ResourceManager.GetString("ICBadOverrideFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member property &apos;{0}&apos; of &apos;{1}&apos;: the member property to overide &apos;{2}&apos; of &apos;{3}&apos; has different parameters or return type..
        /// </summary>
        internal static string ICBadOverrideProperty {
            get {
                return ResourceManager.GetString("ICBadOverrideProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No block named &apos;{0}&apos; was found from the surrounding blocks..
        /// </summary>
        internal static string ICBlockNotFound {
            get {
                return ResourceManager.GetString("ICBlockNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot obtain a function reference to &apos;{0}&apos;..
        /// </summary>
        internal static string ICCannotGetFunctionReference {
            get {
                return ResourceManager.GetString("ICCannotGetFunctionReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Capturing a by-ref parameter is not allowed..
        /// </summary>
        internal static string ICCaptureByRefParameter {
            get {
                return ResourceManager.GetString("ICCaptureByRefParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular inheritance which involves following {0} classes found..
        /// </summary>
        internal static string ICCircularInheritance {
            get {
                return ResourceManager.GetString("ICCircularInheritance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ({0} of {1}) {2} which inherits from {3}.
        /// </summary>
        internal static string ICCircularInheritanceClass {
            get {
                return ResourceManager.GetString("ICCircularInheritanceClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The evaluation of the constant value for &apos;{0}&apos; involves a circular reference..
        /// </summary>
        internal static string ICCircularReference {
            get {
                return ResourceManager.GetString("ICCircularReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type is not a value..
        /// </summary>
        internal static string ICClassAsValue {
            get {
                return ResourceManager.GetString("ICClassAsValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The abstruct class &apos;{0}&apos; cannot be constructed..
        /// </summary>
        internal static string ICConstructAbstructClass {
            get {
                return ResourceManager.GetString("ICConstructAbstructClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interface &apos;{0}&apos; cannot be constructed..
        /// </summary>
        internal static string ICConstructInterface {
            get {
                return ResourceManager.GetString("ICConstructInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access a constructor..
        /// </summary>
        internal static string ICConstructorCall {
            get {
                return ResourceManager.GetString("ICConstructorCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor must have no generic type parameters..
        /// </summary>
        internal static string ICConstructorHavingGenericTypeParameter {
            get {
                return ResourceManager.GetString("ICConstructorHavingGenericTypeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor must have no parameters..
        /// </summary>
        internal static string ICConstructorHavingParameter {
            get {
                return ResourceManager.GetString("ICConstructorHavingParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor must not have a returned value..
        /// </summary>
        internal static string ICConstructorHavingReturnType {
            get {
                return ResourceManager.GetString("ICConstructorHavingReturnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access a destructor..
        /// </summary>
        internal static string ICDestructorCall {
            get {
                return ResourceManager.GetString("ICDestructorCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A destructor must have no generic type parameters..
        /// </summary>
        internal static string ICDestructorHavingGenericTypeParameter {
            get {
                return ResourceManager.GetString("ICDestructorHavingGenericTypeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A destructor must have no parameters..
        /// </summary>
        internal static string ICDestructorHavingParameter {
            get {
                return ResourceManager.GetString("ICDestructorHavingParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A destructor must not have a returned value..
        /// </summary>
        internal static string ICDestructorHavingReturnType {
            get {
                return ResourceManager.GetString("ICDestructorHavingReturnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Division by zero was found during the compile-time evaluation..
        /// </summary>
        internal static string ICDivideByZero {
            get {
                return ResourceManager.GetString("ICDivideByZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entity &apos;{0}&apos; doesn&apos;t have a sub-scope..
        /// </summary>
        internal static string ICEntityDoesNotHaveScope {
            get {
                return ResourceManager.GetString("ICEntityDoesNotHaveScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entity &apos;{0}&apos; is not a type..
        /// </summary>
        internal static string ICEntityIsNotType {
            get {
                return ResourceManager.GetString("ICEntityIsNotType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entity with name &apos;{0}&apos; was not found..
        /// </summary>
        internal static string ICEntityNotFound {
            get {
                return ResourceManager.GetString("ICEntityNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstantiated generic type cannot be used for the generic type parameter specification..
        /// </summary>
        internal static string ICGenericGenericTypeParameter {
            get {
                return ResourceManager.GetString("ICGenericGenericTypeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-local variable cannot be implicitly typed..
        /// </summary>
        internal static string ICImplicitlyTypedNonLocalVariable {
            get {
                return ResourceManager.GetString("ICImplicitlyTypedNonLocalVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array index must be passed by value..
        /// </summary>
        internal static string ICIndexArrayByRef {
            get {
                return ResourceManager.GetString("ICIndexArrayByRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot inherit from a generic type parameter..
        /// </summary>
        internal static string ICInheritFromGenericParameter {
            get {
                return ResourceManager.GetString("ICInheritFromGenericParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class cannot inherit from a sealed class..
        /// </summary>
        internal static string ICInheritFromSealed {
            get {
                return ResourceManager.GetString("ICInheritFromSealed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot inherit from the non-class type &apos;{0}&apos;..
        /// </summary>
        internal static string ICInheritingFromNonClass {
            get {
                return ResourceManager.GetString("ICInheritingFromNonClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface implementing another interface is not supported..
        /// </summary>
        internal static string ICInterfaceInheritance {
            get {
                return ResourceManager.GetString("ICInterfaceInheritance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface cannot inherit from a class type..
        /// </summary>
        internal static string ICInterfaceInheritingClass {
            get {
                return ResourceManager.GetString("ICInterfaceInheritingClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign to the value of an expression. Only variables and properties can be assigned to..
        /// </summary>
        internal static string ICInvalidAssignment {
            get {
                return ResourceManager.GetString("ICInvalidAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid operator &apos;{0}&apos; for the operand of type &apos;{1}&apos; and &apos;{2}&apos;.
        /// </summary>
        internal static string ICInvalidBinaryOperatorOperation {
            get {
                return ResourceManager.GetString("ICInvalidBinaryOperatorOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert from &apos;{0}&apos; of type &apos;{1}&apos; to &apos;{2}’..
        /// </summary>
        internal static string ICInvalidConstantCast {
            get {
                return ResourceManager.GetString("ICInvalidConstantCast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Explicit conversion from &apos;{0}&apos; to &apos;{1}&apos; is not available..
        /// </summary>
        internal static string ICInvalidExplicitCast {
            get {
                return ResourceManager.GetString("ICInvalidExplicitCast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid generic type parameter specification..
        /// </summary>
        internal static string ICInvalidGenericTypeParameter {
            get {
                return ResourceManager.GetString("ICInvalidGenericTypeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicit conversion from &apos;{0}&apos; to &apos;{1}&apos; is not available. Explicit conversion exists. (missing cast?).
        /// </summary>
        internal static string ICInvalidImplicitCast {
            get {
                return ResourceManager.GetString("ICInvalidImplicitCast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicit conversion between &apos;{0}&apos; and &apos;{1}&apos; is not available. Explicit conversion exists. (missing cast?).
        /// </summary>
        internal static string ICInvalidImplicitCastBiDi {
            get {
                return ResourceManager.GetString("ICInvalidImplicitCastBiDi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicit conversion from &apos;{0}&apos; to &apos;{1}&apos; is not available..
        /// </summary>
        internal static string ICInvalidImplicitCastNoExplicit {
            get {
                return ResourceManager.GetString("ICInvalidImplicitCastNoExplicit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicit conversion between &apos;{0}&apos; and &apos;{1}&apos; is not available..
        /// </summary>
        internal static string ICInvalidImplicitCastNoExplicitBiDi {
            get {
                return ResourceManager.GetString("ICInvalidImplicitCastNoExplicitBiDi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;throw&apos; statement should not have the second parameter when a non-primitive object is passed as the first parameter..
        /// </summary>
        internal static string ICInvalidThrowUsage {
            get {
                return ResourceManager.GetString("ICInvalidThrowUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid operator &apos;{0}&apos; for the operand of type &apos;{1}&apos;.
        /// </summary>
        internal static string ICInvalidUnaryOperatorOperation {
            get {
                return ResourceManager.GetString("ICInvalidUnaryOperatorOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control cannot be transfered out of &apos;finally&apos; block..
        /// </summary>
        internal static string ICLeavingOutOfFinally {
            get {
                return ResourceManager.GetString("ICLeavingOutOfFinally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local variable &apos;{0}&apos; is already defined in the same block..
        /// </summary>
        internal static string ICLocalVariableNameConfliction {
            get {
                return ResourceManager.GetString("ICLocalVariableNameConfliction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member access operator is not available for functions..
        /// </summary>
        internal static string ICMemberAccessForFunction {
            get {
                return ResourceManager.GetString("ICMemberAccessForFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find a member of &apos;{0}&apos; that is named &apos;{1}&apos;..
        /// </summary>
        internal static string ICMemberNotFound {
            get {
                return ResourceManager.GetString("ICMemberNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface cannot have a member property..
        /// </summary>
        internal static string ICMemberPropertyOfInterface {
            get {
                return ResourceManager.GetString("ICMemberPropertyOfInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface cannot have a member variable..
        /// </summary>
        internal static string ICMemberVariableOfInterface {
            get {
                return ResourceManager.GetString("ICMemberVariableOfInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; is missing an implementation for &apos;{1}&apos; of &apos;{2}&apos;..
        /// </summary>
        internal static string ICMissingImplementation {
            get {
                return ResourceManager.GetString("ICMissingImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple inheritance is not permitted..
        /// </summary>
        internal static string ICMultipleInheritance {
            get {
                return ResourceManager.GetString("ICMultipleInheritance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface cannot have a nested class declaration..
        /// </summary>
        internal static string ICNestedClassOfInterface {
            get {
                return ResourceManager.GetString("ICNestedClassOfInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member function &apos;{0}&apos; of &apos;{1}&apos;: no suitable member function found to override..
        /// </summary>
        internal static string ICNoMemberFunctionToOverride {
            get {
                return ResourceManager.GetString("ICNoMemberFunctionToOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member property &apos;{0}&apos; of &apos;{1}&apos;: no suitable member property found to override..
        /// </summary>
        internal static string ICNoMemberPropertyToOverride {
            get {
                return ResourceManager.GetString("ICNoMemberPropertyToOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value for &apos;{0}&apos; is not constant..
        /// </summary>
        internal static string ICNonConstantValue {
            get {
                return ResourceManager.GetString("ICNonConstantValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicitly typed variables must be initialized..
        /// </summary>
        internal static string ICNoninitializedImplicitlyTypedVariable {
            get {
                return ResourceManager.GetString("ICNoninitializedImplicitlyTypedVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The block &apos;{0}&apos; is not a looping block..
        /// </summary>
        internal static string ICNonLoopingBlock {
            get {
                return ResourceManager.GetString("ICNonLoopingBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implementation of an interface must be public..
        /// </summary>
        internal static string ICNonPublicImplement {
            get {
                return ResourceManager.GetString("ICNonPublicImplement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returned value required..
        /// </summary>
        internal static string ICNoReturnValue {
            get {
                return ResourceManager.GetString("ICNoReturnValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; cannot be constructed..
        /// </summary>
        internal static string ICNotConstructible {
            get {
                return ResourceManager.GetString("ICNotConstructible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; is not indexable..
        /// </summary>
        internal static string ICNotIndexable {
            get {
                return ResourceManager.GetString("ICNotIndexable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; is not iterable because it doesn&apos;t have a member function &apos;GetIter():iter&lt;T&gt;&apos; and it is not an array..
        /// </summary>
        internal static string ICNotIterable {
            get {
                return ResourceManager.GetString("ICNotIterable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot initialize an implicitly typed variable to &apos;null&apos;..
        /// </summary>
        internal static string ICNullImplicitlyVariable {
            get {
                return ResourceManager.GetString("ICNullImplicitlyVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compile-time evaluation of the expression resulted in an arithmetic overflow..
        /// </summary>
        internal static string ICOverflow {
            get {
                return ResourceManager.GetString("ICOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member &apos;{0}&apos; of &apos;{1}&apos; overriding the member &apos;{2}&apos; of &apos;{3}&apos; cannot reduce accessibility of the member..
        /// </summary>
        internal static string ICOverrideInvalidAccess {
            get {
                return ResourceManager.GetString("ICOverrideInvalidAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface cannot have a private member..
        /// </summary>
        internal static string ICPrivateInterfaceMember {
            get {
                return ResourceManager.GetString("ICPrivateInterfaceMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return a value in a function without a return type..
        /// </summary>
        internal static string ICReturningValue {
            get {
                return ResourceManager.GetString("ICReturningValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root global scope specifier cannot be used as a entity..
        /// </summary>
        internal static string ICRootGlobalScopeIsNotEntity {
            get {
                return ResourceManager.GetString("ICRootGlobalScopeIsNotEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root global scope specifier cannot be used as a type..
        /// </summary>
        internal static string ICRootGlobalScopeIsNotType {
            get {
                return ResourceManager.GetString("ICRootGlobalScopeIsNotType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class cannot inherit from itself..
        /// </summary>
        internal static string ICSelfInheritance {
            get {
                return ResourceManager.GetString("ICSelfInheritance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member &apos;{0}&apos; of &apos;{1}&apos;: the parent class &apos;{2}&apos; already has the member &apos;{3}&apos;.
        /// </summary>
        internal static string ICSuperclassMemberNameConflict {
            get {
                return ResourceManager.GetString("ICSuperclassMemberNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member function &apos;{0}&apos; of &apos;{1}&apos;: the parent class &apos;{2}&apos; already has the member function &apos;{3}&apos;. Add &apos;+&apos; before &apos;func&apos; token to override the member..
        /// </summary>
        internal static string ICSuperclassMemberNameConflictFunction {
            get {
                return ResourceManager.GetString("ICSuperclassMemberNameConflictFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member property &apos;{0}&apos; of &apos;{1}&apos;: the parent class &apos;{2}&apos; already has the member property &apos;{3}&apos;. Add &apos;+&apos; before &apos;property&apos; token to override the member..
        /// </summary>
        internal static string ICSuperclassMemberNameConflictProperty {
            get {
                return ResourceManager.GetString("ICSuperclassMemberNameConflictProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;case&apos; clause should have at least one range..
        /// </summary>
        internal static string ICSwitchNoRange {
            get {
                return ResourceManager.GetString("ICSwitchNoRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not callable..
        /// </summary>
        internal static string ICUncallable {
            get {
                return ResourceManager.GetString("ICUncallable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot throw an object of type &apos;{0}&apos;..
        /// </summary>
        internal static string ICUnthrowable {
            get {
                return ResourceManager.GetString("ICUnthrowable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong number of generic parameters: &apos;{0}&apos; (&apos;{1}&apos; expected).
        /// </summary>
        internal static string ICWrongNumGenericParameters {
            get {
                return ResourceManager.GetString("ICWrongNumGenericParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong number of indices &apos;{0}&apos;, expected &apos;{1}&apos;.
        /// </summary>
        internal static string ICWrongNumIndices {
            get {
                return ResourceManager.GetString("ICWrongNumIndices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong number of parameters &apos;{0}&apos;, expected &apos;{1}&apos;.
        /// </summary>
        internal static string ICWrongNumParameters {
            get {
                return ResourceManager.GetString("ICWrongNumParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passing a parameter with a wrong by-ref/val specification for parameter &apos;#{0}&apos;..
        /// </summary>
        internal static string ICWrongParameterPassingMethod {
            get {
                return ResourceManager.GetString("ICWrongParameterPassingMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error..
        /// </summary>
        internal static string InternalError {
            get {
                return ResourceManager.GetString("InternalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class must be enclosed with &quot;end class&quot;..
        /// </summary>
        internal static string ParserClassUnexpectedEOF {
            get {
                return ResourceManager.GetString("ParserClassUnexpectedEOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value is required for a constant variable..
        /// </summary>
        internal static string ParserConstantWithoutValue {
            get {
                return ResourceManager.GetString("ParserConstantWithoutValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor can only by declared in a class declaration..
        /// </summary>
        internal static string ParserConstructorInNonClass {
            get {
                return ResourceManager.GetString("ParserConstructorInNonClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A destructor can only by declared in a class declaration..
        /// </summary>
        internal static string ParserDestructorInNonClass1 {
            get {
                return ResourceManager.GetString("ParserDestructorInNonClass1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;elif&quot; should appear before &quot;else&quot; statement..
        /// </summary>
        internal static string ParserElifAfterElse {
            get {
                return ResourceManager.GetString("ParserElifAfterElse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity declaration expected..
        /// </summary>
        internal static string ParserEntityDeclarationExpected {
            get {
                return ResourceManager.GetString("ParserEntityDeclarationExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function must be enclosed with &quot;end func&quot;..
        /// </summary>
        internal static string ParserFunctionUnexpectedEOF {
            get {
                return ResourceManager.GetString("ParserFunctionUnexpectedEOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;if&quot; block must be enclosed with &quot;end if&quot;..
        /// </summary>
        internal static string ParserIfUnexpectedEOF {
            get {
                return ResourceManager.GetString("ParserIfUnexpectedEOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid access modifier specification..
        /// </summary>
        internal static string ParserInvalidAccessModifier {
            get {
                return ResourceManager.GetString("ParserInvalidAccessModifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Malformed access modifier specification..
        /// </summary>
        internal static string ParserMalformedAccessModifier {
            get {
                return ResourceManager.GetString("ParserMalformedAccessModifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Old generic parameter syntax and new one cannot be mixed..
        /// </summary>
        internal static string ParserMixedGenericParameters {
            get {
                return ResourceManager.GetString("ParserMixedGenericParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;If&quot; block must have one &quot;else&quot; statement at most..
        /// </summary>
        internal static string ParserMultipleElse {
            get {
                return ResourceManager.GetString("ParserMultipleElse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;try&quot; block must have at most one &quot;finally&quot; statement..
        /// </summary>
        internal static string ParserMultipleFinally {
            get {
                return ResourceManager.GetString("ParserMultipleFinally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is already defined..
        /// </summary>
        internal static string ParserNameConfliction {
            get {
                return ResourceManager.GetString("ParserNameConfliction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Previously defined here.
        /// </summary>
        internal static string ParserNameConflictionPreviousDefinition {
            get {
                return ResourceManager.GetString("ParserNameConflictionPreviousDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reserved identifier..
        /// </summary>
        internal static string ParserReservedIdentifier {
            get {
                return ResourceManager.GetString("ParserReservedIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;switch&quot; block must have one &quot;default&quot; statement as most..
        /// </summary>
        internal static string ParserSwitchMultipleDefault {
            get {
                return ResourceManager.GetString("ParserSwitchMultipleDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected token &apos;{0}&apos; found..
        /// </summary>
        internal static string ParserUnexpectedToken {
            get {
                return ResourceManager.GetString("ParserUnexpectedToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;while&quot; block must be enclosed wtih &quot;end while&quot;..
        /// </summary>
        internal static string ParserWhileUnexpectedEOF {
            get {
                return ResourceManager.GetString("ParserWhileUnexpectedEOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [block].
        /// </summary>
        internal static string SurrogateClassDefaultName {
            get {
                return ResourceManager.GetString("SurrogateClassDefaultName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [local entity of {0}].
        /// </summary>
        internal static string SurrogateRootClassName {
            get {
                return ResourceManager.GetString("SurrogateRootClassName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [end of file].
        /// </summary>
        internal static string TokenEndOfFile {
            get {
                return ResourceManager.GetString("TokenEndOfFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [end of line].
        /// </summary>
        internal static string TokenEndOfLine {
            get {
                return ResourceManager.GetString("TokenEndOfLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid character..
        /// </summary>
        internal static string TokenizerInvalidCharacter {
            get {
                return ResourceManager.GetString("TokenizerInvalidCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid character token found..
        /// </summary>
        internal static string TokenizerInvalidCharToken {
            get {
                return ResourceManager.GetString("TokenizerInvalidCharToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid escape sequence: &apos;{0}&apos;.
        /// </summary>
        internal static string TokenizerInvalidEscapeSequence {
            get {
                return ResourceManager.GetString("TokenizerInvalidEscapeSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid numeric literal..
        /// </summary>
        internal static string TokenizerInvalidNumericLiteral {
            get {
                return ResourceManager.GetString("TokenizerInvalidNumericLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid radix..
        /// </summary>
        internal static string TokenizerInvalidRadix {
            get {
                return ResourceManager.GetString("TokenizerInvalidRadix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comment must be enclosed with { ... }.
        /// </summary>
        internal static string TokenizerNoCommentTerminator {
            get {
                return ResourceManager.GetString("TokenizerNoCommentTerminator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Digit expected, but one was not found..
        /// </summary>
        internal static string TokenizerNoDigits {
            get {
                return ResourceManager.GetString("TokenizerNoDigits", resourceCulture);
            }
        }
    }
}
